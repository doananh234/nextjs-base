{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/apple/Work/myproject/base/base-nextjs/pages/_app.js\";\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport { ThemeProvider } from 'styled-components';\nimport AuthActions from '../redux/Auth/actions';\nimport configureStore from '../redux/store';\nimport { isAuthenticated } from '../utils/cookies';\nimport theme from '../config/theme';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(ThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps, isAuth;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps({\n                  ctx: ctx\n                });\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                // TODO: Sharing isAuthenticated state all of application\n                isAuth = isAuthenticated(ctx);\n                ctx.store.dispatch(AuthActions.setAuth(isAuth));\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withRedux(configureStore)(withReduxSaga(MyApp));","map":{"version":3,"sources":["/Users/apple/Work/myproject/base/base-nextjs/pages/_app.js"],"names":["App","Container","React","Provider","withRedux","withReduxSaga","ThemeProvider","AuthActions","configureStore","isAuthenticated","theme","MyApp","props","Component","pageProps","store","ctx","getInitialProps","isAuth","dispatch","setAuth"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,OAAOC,cAAP,MAA2B,gBAA3B;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;IAEMC,K;;;;;;;;;;;;;6BAcK;AAAA,wBACiC,KAAKC,KADtC;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,KADvB,eACuBA,KADvB;AAEP,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAEL,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEK,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF,CADF,CADF;AASD;;;;;;;;;;;;AAxB8BD,gBAAAA,S,QAAAA,S,EAAWG,G,QAAAA,G;AACpCF,gBAAAA,S,GAAY,E;;qBAEZD,SAAS,CAACI,e;;;;;;uBACMJ,SAAS,CAACI,eAAV,CAA0B;AAAED,kBAAAA,GAAG,EAAHA;AAAF,iBAA1B,C;;;AAAlBF,gBAAAA,S;;;AAEF;AACMI,gBAAAA,M,GAAST,eAAe,CAACO,GAAD,C;AAC9BA,gBAAAA,GAAG,CAACD,KAAJ,CAAUI,QAAV,CAAmBZ,WAAW,CAACa,OAAZ,CAAoBF,MAApB,CAAnB;iDAEO;AAAEJ,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAXSd,G;;AA4BpB,eAAeI,SAAS,CAACI,cAAD,CAAT,CAA0BH,aAAa,CAACM,KAAD,CAAvC,CAAf","sourcesContent":["import App, { Container } from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport { ThemeProvider } from 'styled-components';\nimport AuthActions from '../redux/Auth/actions';\n\nimport configureStore from '../redux/store';\nimport { isAuthenticated } from '../utils/cookies';\nimport theme from '../config/theme';\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps({ ctx });\n    }\n    // TODO: Sharing isAuthenticated state all of application\n    const isAuth = isAuthenticated(ctx);\n    ctx.store.dispatch(AuthActions.setAuth(isAuth));\n\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n      <Container>\n        <ThemeProvider theme={theme}>\n          <Provider store={store}>\n            <Component {...pageProps} />\n          </Provider>\n        </ThemeProvider>\n      </Container>\n    );\n  }\n}\n\nexport default withRedux(configureStore)(withReduxSaga(MyApp));\n"]},"metadata":{},"sourceType":"module"}