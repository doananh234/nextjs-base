{"ast":null,"code":"import cookie from 'js-cookie';\nexport const setCookie = (key, value) => {\n  if (process.browser) {\n    cookie.set(key, value, {\n      expires: 1,\n      path: '/'\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (process.browser) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\n\nconst getCookieFromBrowser = key => cookie.get(key);\n\nconst getCookieFromServer = (key, req) => {\n  if (!req.headers.cookie) {\n    return undefined;\n  }\n\n  const rawCookie = req.headers.cookie.split(';').find(c => c.trim().startsWith(`${key}=`));\n\n  if (!rawCookie) {\n    return undefined;\n  }\n\n  return rawCookie.split('=')[1];\n};\n\nexport const getCookie = (key, req) => process.browser ? getCookieFromBrowser(key) : getCookieFromServer(key, req); // TODO: Token\n\nexport const getToken = (ctx = {}) => getCookie('token', ctx.req);\nexport const setToken = value => setCookie('token', value);\nexport const removeToken = () => removeCookie('token');\n/**\n * Get authenticated status\n * @param {*} ctx optional\n */\n\nexport const isAuthenticated = ctx => !!getToken(ctx);","map":{"version":3,"sources":["/Users/apple/Work/myproject/base/base-nextjs/utils/cookies.js"],"names":["cookie","setCookie","key","value","process","browser","set","expires","path","removeCookie","remove","getCookieFromBrowser","get","getCookieFromServer","req","headers","undefined","rawCookie","split","find","c","trim","startsWith","getCookie","getToken","ctx","setToken","removeToken","isAuthenticated"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACvC,MAAIC,OAAO,CAACC,OAAZ,EAAqB;AACnBL,IAAAA,MAAM,CAACM,GAAP,CAAWJ,GAAX,EAAgBC,KAAhB,EAAuB;AACrBI,MAAAA,OAAO,EAAE,CADY;AAErBC,MAAAA,IAAI,EAAE;AAFe,KAAvB;AAID;AACF,CAPM;AASP,OAAO,MAAMC,YAAY,GAAGP,GAAG,IAAI;AACjC,MAAIE,OAAO,CAACC,OAAZ,EAAqB;AACnBL,IAAAA,MAAM,CAACU,MAAP,CAAcR,GAAd,EAAmB;AACjBK,MAAAA,OAAO,EAAE;AADQ,KAAnB;AAGD;AACF,CANM;;AAQP,MAAMI,oBAAoB,GAAGT,GAAG,IAAIF,MAAM,CAACY,GAAP,CAAWV,GAAX,CAApC;;AAEA,MAAMW,mBAAmB,GAAG,CAACX,GAAD,EAAMY,GAAN,KAAc;AACxC,MAAI,CAACA,GAAG,CAACC,OAAJ,CAAYf,MAAjB,EAAyB;AACvB,WAAOgB,SAAP;AACD;;AACD,QAAMC,SAAS,GAAGH,GAAG,CAACC,OAAJ,CAAYf,MAAZ,CACfkB,KADe,CACT,GADS,EAEfC,IAFe,CAEVC,CAAC,IAAIA,CAAC,CAACC,IAAF,GAASC,UAAT,CAAqB,GAAEpB,GAAI,GAA3B,CAFK,CAAlB;;AAGA,MAAI,CAACe,SAAL,EAAgB;AACd,WAAOD,SAAP;AACD;;AACD,SAAOC,SAAS,CAACC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAP;AACD,CAXD;;AAaA,OAAO,MAAMK,SAAS,GAAG,CAACrB,GAAD,EAAMY,GAAN,KACvBV,OAAO,CAACC,OAAR,GAAkBM,oBAAoB,CAACT,GAAD,CAAtC,GAA8CW,mBAAmB,CAACX,GAAD,EAAMY,GAAN,CAD5D,C,CAGP;;AACA,OAAO,MAAMU,QAAQ,GAAG,CAACC,GAAG,GAAG,EAAP,KAAcF,SAAS,CAAC,OAAD,EAAUE,GAAG,CAACX,GAAd,CAAxC;AACP,OAAO,MAAMY,QAAQ,GAAGvB,KAAK,IAAIF,SAAS,CAAC,OAAD,EAAUE,KAAV,CAAnC;AACP,OAAO,MAAMwB,WAAW,GAAG,MAAMlB,YAAY,CAAC,OAAD,CAAtC;AACP;;;;;AAIA,OAAO,MAAMmB,eAAe,GAAGH,GAAG,IAAI,CAAC,CAACD,QAAQ,CAACC,GAAD,CAAzC","sourcesContent":["import cookie from 'js-cookie';\n\nexport const setCookie = (key, value) => {\n  if (process.browser) {\n    cookie.set(key, value, {\n      expires: 1,\n      path: '/',\n    });\n  }\n};\n\nexport const removeCookie = key => {\n  if (process.browser) {\n    cookie.remove(key, {\n      expires: 1,\n    });\n  }\n};\n\nconst getCookieFromBrowser = key => cookie.get(key);\n\nconst getCookieFromServer = (key, req) => {\n  if (!req.headers.cookie) {\n    return undefined;\n  }\n  const rawCookie = req.headers.cookie\n    .split(';')\n    .find(c => c.trim().startsWith(`${key}=`));\n  if (!rawCookie) {\n    return undefined;\n  }\n  return rawCookie.split('=')[1];\n};\n\nexport const getCookie = (key, req) =>\n  process.browser ? getCookieFromBrowser(key) : getCookieFromServer(key, req);\n\n// TODO: Token\nexport const getToken = (ctx = {}) => getCookie('token', ctx.req);\nexport const setToken = value => setCookie('token', value);\nexport const removeToken = () => removeCookie('token');\n/**\n * Get authenticated status\n * @param {*} ctx optional\n */\nexport const isAuthenticated = ctx => !!getToken(ctx);\n"]},"metadata":{},"sourceType":"module"}