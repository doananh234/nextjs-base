{"ast":null,"code":"import cookie from 'js-cookie';\nexport var setCookie = function setCookie(key, value) {\n  if (process.browser) {\n    cookie.set(key, value, {\n      expires: 1,\n      path: '/'\n    });\n  }\n};\nexport var removeCookie = function removeCookie(key) {\n  if (process.browser) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\n\nvar getCookieFromBrowser = function getCookieFromBrowser(key) {\n  return cookie.get(key);\n};\n\nvar getCookieFromServer = function getCookieFromServer(key, req) {\n  if (!req.headers.cookie) {\n    return undefined;\n  }\n\n  var rawCookie = req.headers.cookie.split(';').find(function (c) {\n    return c.trim().startsWith(\"\".concat(key, \"=\"));\n  });\n\n  if (!rawCookie) {\n    return undefined;\n  }\n\n  return rawCookie.split('=')[1];\n};\n\nexport var getCookie = function getCookie(key, req) {\n  return process.browser ? getCookieFromBrowser(key) : getCookieFromServer(key, req);\n}; // TODO: Token\n\nexport var getToken = function getToken() {\n  var ctx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return getCookie('token', ctx.req);\n};\nexport var setToken = function setToken(value) {\n  return setCookie('token', value);\n};\nexport var removeToken = function removeToken() {\n  return removeCookie('token');\n};\n/**\n * Get authenticated status\n * @param {*} ctx optional\n */\n\nexport var isAuthenticated = function isAuthenticated(ctx) {\n  return !!getToken(ctx);\n};","map":null,"metadata":{},"sourceType":"module"}