{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { makeConstantCreator, makeActionCreator } from '../../utils/redux'; // TODO: Model name\n// export const MODEL = 'todos';\n// TODO: Add actions you don't want to use here\n\nexport var IGNORE_ACTIONS = []; // TODO: Create constant types for model\n\nexport var Types = _objectSpread({}, makeConstantCreator('SIGN_IN', 'SIGN_IN_SUCCESS', 'SIGN_IN_FAILURE', 'SIGN_UP', 'SIGN_UP_SUCCESS', 'SIGN_UP_FAILURE', 'GOOGLE_SIGN_IN', 'GOOGLE_SIGN_IN_SUCCESS', 'GOOGLE_SIGN_IN_FAILURE', 'FB_SIGN_IN', 'FB_SIGN_IN_SUCCESS', 'FB_SIGN_IN_FAILURE', 'SIGN_OUT', 'CHANGE_PASSWORD', 'GET_USE', 'EDIT_USER', 'UPDATE_USER_SUCCESS', 'UPDATE_USER_FAILURE', 'SET_AUTH', 'SHOW_AUTH_DRAWER', 'GET_ACCOUNT_INFO', 'GET_ACCOUNT_INFO_SUCCESS', 'GET_ACCOUNT_INFO_FAILURE', 'UPDATE_ACCOUNT_INFO', 'UPDATE_ACCOUNT_INFO_SUCCESS', 'UPDATE_ACCOUNT_INFO_FAILURE')); // const CRUDActions = makeCRUDActionsCreator(MODEL, IGNORE_ACTIONS);\n// TODO: Custom actions\n\n/** Facebook Sign In */\n\nvar fbSignIn = function fbSignIn(accessToken, info) {\n  return makeActionCreator(Types.FB_SIGN_IN, {\n    accessToken: accessToken,\n    info: info\n  });\n};\n\nvar fbSignInSuccess = function fbSignInSuccess(token) {\n  return makeActionCreator(Types.FB_SIGN_IN_SUCCESS, {\n    token: token\n  });\n};\n\nvar fbSignInFailure = function fbSignInFailure(error) {\n  return makeActionCreator(Types.FB_SIGN_IN_FAILURE, {\n    error: error\n  });\n};\n/** Google Sign In */\n\n\nvar googleSignIn = function googleSignIn(accessToken) {\n  return makeActionCreator(Types.GOOGLE_SIGN_IN, {\n    accessToken: accessToken\n  });\n};\n\nvar googleSignInSuccess = function googleSignInSuccess(token) {\n  return makeActionCreator(Types.GOOGLE_SIGN_IN_SUCCESS, {\n    token: token\n  });\n};\n\nvar googleSignInFailure = function googleSignInFailure(error) {\n  return makeActionCreator(Types.GOOGLE_SIGN_IN_FAILURE, {\n    error: error\n  });\n};\n/** Email Sign In */\n\n\nvar signIn = function signIn(_ref) {\n  var email = _ref.email,\n      password = _ref.password;\n  return makeActionCreator(Types.SIGN_IN, {\n    email: email,\n    password: password\n  });\n};\n\nvar signInSuccess = function signInSuccess(token) {\n  return makeActionCreator(Types.SIGN_IN_SUCCESS, {\n    token: token\n  });\n};\n\nvar signInFailure = function signInFailure(error) {\n  return makeActionCreator(Types.SIGN_IN_FAILURE, {\n    error: error\n  });\n};\n/** Email Sign Up */\n\n\nvar signUp = function signUp(_ref2) {\n  var email = _ref2.email,\n      password = _ref2.password,\n      firstName = _ref2.firstName,\n      lastName = _ref2.lastName;\n  return makeActionCreator(Types.SIGN_UP, {\n    email: email,\n    password: password,\n    firstName: firstName,\n    lastName: lastName\n  });\n};\n\nvar signUpSuccess = function signUpSuccess(token) {\n  return makeActionCreator(Types.SIGN_UP_SUCCESS, {\n    token: token\n  });\n};\n\nvar signUpFailure = function signUpFailure(error) {\n  return makeActionCreator(Types.SIGN_UP_FAILURE, {\n    error: error\n  });\n};\n\nvar signOut = function signOut() {\n  return makeActionCreator(Types.SIGN_OUT);\n};\n/**\n * Set Authentication Status\n * @param {*} status\n */\n\n\nvar setAuth = function setAuth(status) {\n  return makeActionCreator(Types.SET_AUTH, {\n    status: status\n  });\n};\n/**\n * Show authentication drawer\n * @param {*} status\n */\n\n\nvar showAuthDrawer = function showAuthDrawer(status) {\n  return makeActionCreator(Types.SHOW_AUTH_DRAWER, {\n    status: status\n  });\n};\n/**\n * Get account info\n * @param {*} status\n */\n\n\nvar getAccountInfo = function getAccountInfo() {\n  return makeActionCreator(Types.GET_ACCOUNT_INFO);\n};\n\nvar getAccountInfoSuccess = function getAccountInfoSuccess(data) {\n  return makeActionCreator(Types.GET_ACCOUNT_INFO_SUCCESS, _objectSpread({}, data));\n};\n\nvar getAccountInfoFailure = function getAccountInfoFailure(error) {\n  return makeActionCreator(Types.GET_ACCOUNT_INFO_SUCCESS, _objectSpread({}, error));\n}; // TODO: Auto generated actions will be like this\n\n\nexport default {\n  fbSignIn: fbSignIn,\n  fbSignInSuccess: fbSignInSuccess,\n  fbSignInFailure: fbSignInFailure,\n  googleSignIn: googleSignIn,\n  googleSignInSuccess: googleSignInSuccess,\n  googleSignInFailure: googleSignInFailure,\n  signIn: signIn,\n  signInSuccess: signInSuccess,\n  signInFailure: signInFailure,\n  signUp: signUp,\n  signUpSuccess: signUpSuccess,\n  signUpFailure: signUpFailure,\n  setAuth: setAuth,\n  showAuthDrawer: showAuthDrawer,\n  signOut: signOut,\n  getAccountInfo: getAccountInfo,\n  getAccountInfoSuccess: getAccountInfoSuccess,\n  getAccountInfoFailure: getAccountInfoFailure\n};","map":{"version":3,"sources":["/Users/apple/Work/myproject/base/base-nextjs/redux/Auth/actions.js"],"names":["makeConstantCreator","makeActionCreator","IGNORE_ACTIONS","Types","fbSignIn","accessToken","info","FB_SIGN_IN","fbSignInSuccess","token","FB_SIGN_IN_SUCCESS","fbSignInFailure","error","FB_SIGN_IN_FAILURE","googleSignIn","GOOGLE_SIGN_IN","googleSignInSuccess","GOOGLE_SIGN_IN_SUCCESS","googleSignInFailure","GOOGLE_SIGN_IN_FAILURE","signIn","email","password","SIGN_IN","signInSuccess","SIGN_IN_SUCCESS","signInFailure","SIGN_IN_FAILURE","signUp","firstName","lastName","SIGN_UP","signUpSuccess","SIGN_UP_SUCCESS","signUpFailure","SIGN_UP_FAILURE","signOut","SIGN_OUT","setAuth","status","SET_AUTH","showAuthDrawer","SHOW_AUTH_DRAWER","getAccountInfo","GET_ACCOUNT_INFO","getAccountInfoSuccess","data","GET_ACCOUNT_INFO_SUCCESS","getAccountInfoFailure"],"mappings":"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","sourcesContent":["import { makeConstantCreator, makeActionCreator } from '../../utils/redux';\n\n// TODO: Model name\n// export const MODEL = 'todos';\n\n// TODO: Add actions you don't want to use here\nexport const IGNORE_ACTIONS = [];\n\n// TODO: Create constant types for model\nexport const Types = {\n  // ...makeCRUDConstantCreator(MODEL, IGNORE_ACTIONS),\n  ...makeConstantCreator(\n    'SIGN_IN',\n    'SIGN_IN_SUCCESS',\n    'SIGN_IN_FAILURE',\n\n    'SIGN_UP',\n    'SIGN_UP_SUCCESS',\n    'SIGN_UP_FAILURE',\n\n    'GOOGLE_SIGN_IN',\n    'GOOGLE_SIGN_IN_SUCCESS',\n    'GOOGLE_SIGN_IN_FAILURE',\n\n    'FB_SIGN_IN',\n    'FB_SIGN_IN_SUCCESS',\n    'FB_SIGN_IN_FAILURE',\n\n    'SIGN_OUT',\n    'CHANGE_PASSWORD',\n    'GET_USE',\n    'EDIT_USER',\n    'UPDATE_USER_SUCCESS',\n    'UPDATE_USER_FAILURE',\n\n    'SET_AUTH',\n\n    'SHOW_AUTH_DRAWER',\n\n    'GET_ACCOUNT_INFO',\n    'GET_ACCOUNT_INFO_SUCCESS',\n    'GET_ACCOUNT_INFO_FAILURE',\n\n    'UPDATE_ACCOUNT_INFO',\n    'UPDATE_ACCOUNT_INFO_SUCCESS',\n    'UPDATE_ACCOUNT_INFO_FAILURE'\n  ),\n};\n\n// const CRUDActions = makeCRUDActionsCreator(MODEL, IGNORE_ACTIONS);\n\n// TODO: Custom actions\n/** Facebook Sign In */\n\nconst fbSignIn = (accessToken, info) =>\n  makeActionCreator(Types.FB_SIGN_IN, { accessToken, info });\nconst fbSignInSuccess = token =>\n  makeActionCreator(Types.FB_SIGN_IN_SUCCESS, { token });\nconst fbSignInFailure = error =>\n  makeActionCreator(Types.FB_SIGN_IN_FAILURE, { error });\n\n/** Google Sign In */\nconst googleSignIn = accessToken =>\n  makeActionCreator(Types.GOOGLE_SIGN_IN, { accessToken });\nconst googleSignInSuccess = token =>\n  makeActionCreator(Types.GOOGLE_SIGN_IN_SUCCESS, { token });\nconst googleSignInFailure = error =>\n  makeActionCreator(Types.GOOGLE_SIGN_IN_FAILURE, { error });\n\n/** Email Sign In */\nconst signIn = ({ email, password }) =>\n  makeActionCreator(Types.SIGN_IN, {\n    email,\n    password,\n  });\nconst signInSuccess = token =>\n  makeActionCreator(Types.SIGN_IN_SUCCESS, { token });\nconst signInFailure = error =>\n  makeActionCreator(Types.SIGN_IN_FAILURE, { error });\n\n/** Email Sign Up */\nconst signUp = ({ email, password, firstName, lastName }) =>\n  makeActionCreator(Types.SIGN_UP, {\n    email,\n    password,\n    firstName,\n    lastName,\n  });\nconst signUpSuccess = token =>\n  makeActionCreator(Types.SIGN_UP_SUCCESS, { token });\nconst signUpFailure = error =>\n  makeActionCreator(Types.SIGN_UP_FAILURE, { error });\n\nconst signOut = () => makeActionCreator(Types.SIGN_OUT);\n\n/**\n * Set Authentication Status\n * @param {*} status\n */\nconst setAuth = status => makeActionCreator(Types.SET_AUTH, { status });\n\n/**\n * Show authentication drawer\n * @param {*} status\n */\nconst showAuthDrawer = status =>\n  makeActionCreator(Types.SHOW_AUTH_DRAWER, { status });\n\n/**\n * Get account info\n * @param {*} status\n */\nconst getAccountInfo = () => makeActionCreator(Types.GET_ACCOUNT_INFO);\n\nconst getAccountInfoSuccess = data =>\n  makeActionCreator(Types.GET_ACCOUNT_INFO_SUCCESS, { ...data });\n\nconst getAccountInfoFailure = error =>\n  makeActionCreator(Types.GET_ACCOUNT_INFO_SUCCESS, { ...error });\n\n// TODO: Auto generated actions will be like this\nexport default {\n  fbSignIn,\n  fbSignInSuccess,\n  fbSignInFailure,\n\n  googleSignIn,\n  googleSignInSuccess,\n  googleSignInFailure,\n\n  signIn,\n  signInSuccess,\n  signInFailure,\n\n  signUp,\n  signUpSuccess,\n  signUpFailure,\n\n  setAuth,\n  showAuthDrawer,\n\n  signOut,\n\n  getAccountInfo,\n  getAccountInfoSuccess,\n  getAccountInfoFailure,\n};\n"]},"metadata":{},"sourceType":"module"}