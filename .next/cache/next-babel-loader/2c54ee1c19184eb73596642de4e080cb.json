{"ast":null,"code":"import Immutable from 'seamless-immutable';\nimport { makeReducerCreator } from '../../utils/redux';\nimport { Types } from './actions';\nexport const INITIAL_STATE = Immutable({\n  isAuth: false,\n  drawerVisible: false\n});\n\nconst setAuth = (state, {\n  status\n}) => state.merge({\n  isAuth: status\n});\n/**\n * Email Sign Reducers\n * @param {*} state\n */\n\n\nconst signInSuccess = state => state.merge({\n  isAuth: true\n});\n/**\n * Facebook Sign Reducers\n * @param {*} state\n */\n\n\nconst fbSignInSuccess = state => state.merge({\n  isAuth: true\n});\n/**\n * Google Sign Reducers\n * @param {*} state\n */\n\n\nconst googleSignInSuccess = state => state.merge({\n  isAuth: true\n});\n\nconst signOut = state => state.merge({\n  isAuth: false\n});\n\nconst showAuthDrawer = (state, {\n  status\n}) => state.merge({\n  drawerVisible: status\n});\n\nconst getUserInfoSuccess = (state, {\n  email,\n  firstName,\n  lastName\n}) => state.merge({\n  email,\n  firstName,\n  lastName\n});\n\nconst ACTION_HANDLERS = {\n  [Types.SET_AUTH]: setAuth,\n  [Types.SIGN_IN_SUCCESS]: signInSuccess,\n  [Types.FB_SIGN_IN_SUCCESS]: fbSignInSuccess,\n  [Types.GOOGLE_SIGN_IN_SUCCESS]: googleSignInSuccess,\n  [Types.SIGN_OUT]: signOut,\n  [Types.SHOW_AUTH_DRAWER]: showAuthDrawer,\n  [Types.GET_ACCOUNT_INFO_SUCCESS]: getUserInfoSuccess\n};\nexport default makeReducerCreator(INITIAL_STATE, ACTION_HANDLERS);","map":null,"metadata":{},"sourceType":"module"}