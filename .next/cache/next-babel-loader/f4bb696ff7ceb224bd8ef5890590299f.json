{"ast":null,"code":"import Immutable from 'seamless-immutable';\nimport { makeReducerCreator } from '../../utils/redux';\nimport { Types } from './actions';\nexport const INITIAL_STATE = Immutable({\n  isAuth: false,\n  drawerVisible: false\n});\n\nconst setAuth = (state, {\n  status\n}) => state.merge({\n  isAuth: status\n});\n/**\n * Email Sign Reducers\n * @param {*} state\n */\n\n\nconst signInSuccess = state => state.merge({\n  isAuth: true\n});\n/**\n * Facebook Sign Reducers\n * @param {*} state\n */\n\n\nconst fbSignInSuccess = state => state.merge({\n  isAuth: true\n});\n/**\n * Google Sign Reducers\n * @param {*} state\n */\n\n\nconst googleSignInSuccess = state => state.merge({\n  isAuth: true\n});\n\nconst signOut = state => state.merge({\n  isAuth: false\n});\n\nconst showAuthDrawer = (state, {\n  status\n}) => state.merge({\n  drawerVisible: status\n});\n\nconst getUserInfoSuccess = (state, {\n  email,\n  firstName,\n  lastName\n}) => state.merge({\n  email,\n  firstName,\n  lastName\n});\n\nconst ACTION_HANDLERS = {\n  [Types.SET_AUTH]: setAuth,\n  [Types.SIGN_IN_SUCCESS]: signInSuccess,\n  [Types.FB_SIGN_IN_SUCCESS]: fbSignInSuccess,\n  [Types.GOOGLE_SIGN_IN_SUCCESS]: googleSignInSuccess,\n  [Types.SIGN_OUT]: signOut,\n  [Types.SHOW_AUTH_DRAWER]: showAuthDrawer,\n  [Types.GET_ACCOUNT_INFO_SUCCESS]: getUserInfoSuccess\n};\nexport default makeReducerCreator(INITIAL_STATE, ACTION_HANDLERS);","map":{"version":3,"sources":["/Users/apple/Work/myproject/base/base-nextjs/redux/Auth/reducers.js"],"names":["Immutable","makeReducerCreator","Types","INITIAL_STATE","isAuth","drawerVisible","setAuth","state","status","merge","signInSuccess","fbSignInSuccess","googleSignInSuccess","signOut","showAuthDrawer","getUserInfoSuccess","email","firstName","lastName","ACTION_HANDLERS","SET_AUTH","SIGN_IN_SUCCESS","FB_SIGN_IN_SUCCESS","GOOGLE_SIGN_IN_SUCCESS","SIGN_OUT","SHOW_AUTH_DRAWER","GET_ACCOUNT_INFO_SUCCESS"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,oBAAtB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,KAAT,QAAsB,WAAtB;AAEA,OAAO,MAAMC,aAAa,GAAGH,SAAS,CAAC;AACrCI,EAAAA,MAAM,EAAE,KAD6B;AAErCC,EAAAA,aAAa,EAAE;AAFsB,CAAD,CAA/B;;AAKP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KACdD,KAAK,CAACE,KAAN,CAAY;AACVL,EAAAA,MAAM,EAAEI;AADE,CAAZ,CADF;AAKA;;;;;;AAIA,MAAME,aAAa,GAAGH,KAAK,IAAIA,KAAK,CAACE,KAAN,CAAY;AAAEL,EAAAA,MAAM,EAAE;AAAV,CAAZ,CAA/B;AAEA;;;;;;AAIA,MAAMO,eAAe,GAAGJ,KAAK,IAAIA,KAAK,CAACE,KAAN,CAAY;AAAEL,EAAAA,MAAM,EAAE;AAAV,CAAZ,CAAjC;AAEA;;;;;;AAIA,MAAMQ,mBAAmB,GAAGL,KAAK,IAAIA,KAAK,CAACE,KAAN,CAAY;AAAEL,EAAAA,MAAM,EAAE;AAAV,CAAZ,CAArC;;AAEA,MAAMS,OAAO,GAAGN,KAAK,IAAIA,KAAK,CAACE,KAAN,CAAY;AAAEL,EAAAA,MAAM,EAAE;AAAV,CAAZ,CAAzB;;AAEA,MAAMU,cAAc,GAAG,CAACP,KAAD,EAAQ;AAAEC,EAAAA;AAAF,CAAR,KACrBD,KAAK,CAACE,KAAN,CAAY;AAAEJ,EAAAA,aAAa,EAAEG;AAAjB,CAAZ,CADF;;AAGA,MAAMO,kBAAkB,GAAG,CAACR,KAAD,EAAQ;AAAES,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAR,KACzBX,KAAK,CAACE,KAAN,CAAY;AAAEO,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAZ,CADF;;AAGA,MAAMC,eAAe,GAAG;AACtB,GAACjB,KAAK,CAACkB,QAAP,GAAkBd,OADI;AAEtB,GAACJ,KAAK,CAACmB,eAAP,GAAyBX,aAFH;AAGtB,GAACR,KAAK,CAACoB,kBAAP,GAA4BX,eAHN;AAItB,GAACT,KAAK,CAACqB,sBAAP,GAAgCX,mBAJV;AAKtB,GAACV,KAAK,CAACsB,QAAP,GAAkBX,OALI;AAMtB,GAACX,KAAK,CAACuB,gBAAP,GAA0BX,cANJ;AAOtB,GAACZ,KAAK,CAACwB,wBAAP,GAAkCX;AAPZ,CAAxB;AAUA,eAAed,kBAAkB,CAACE,aAAD,EAAgBgB,eAAhB,CAAjC","sourcesContent":["import Immutable from 'seamless-immutable';\nimport { makeReducerCreator } from '../../utils/redux';\nimport { Types } from './actions';\n\nexport const INITIAL_STATE = Immutable({\n  isAuth: false,\n  drawerVisible: false,\n});\n\nconst setAuth = (state, { status }) =>\n  state.merge({\n    isAuth: status,\n  });\n\n/**\n * Email Sign Reducers\n * @param {*} state\n */\nconst signInSuccess = state => state.merge({ isAuth: true });\n\n/**\n * Facebook Sign Reducers\n * @param {*} state\n */\nconst fbSignInSuccess = state => state.merge({ isAuth: true });\n\n/**\n * Google Sign Reducers\n * @param {*} state\n */\nconst googleSignInSuccess = state => state.merge({ isAuth: true });\n\nconst signOut = state => state.merge({ isAuth: false });\n\nconst showAuthDrawer = (state, { status }) =>\n  state.merge({ drawerVisible: status });\n\nconst getUserInfoSuccess = (state, { email, firstName, lastName }) =>\n  state.merge({ email, firstName, lastName });\n\nconst ACTION_HANDLERS = {\n  [Types.SET_AUTH]: setAuth,\n  [Types.SIGN_IN_SUCCESS]: signInSuccess,\n  [Types.FB_SIGN_IN_SUCCESS]: fbSignInSuccess,\n  [Types.GOOGLE_SIGN_IN_SUCCESS]: googleSignInSuccess,\n  [Types.SIGN_OUT]: signOut,\n  [Types.SHOW_AUTH_DRAWER]: showAuthDrawer,\n  [Types.GET_ACCOUNT_INFO_SUCCESS]: getUserInfoSuccess,\n};\n\nexport default makeReducerCreator(INITIAL_STATE, ACTION_HANDLERS);\n"]},"metadata":{},"sourceType":"module"}