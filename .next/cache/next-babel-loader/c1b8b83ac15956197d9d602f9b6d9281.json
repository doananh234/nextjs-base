{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { makeConstantCreator, makeActionCreator } from '../../utils/redux'; // TODO: Model name\n// export const MODEL = 'todos';\n// TODO: Add actions you don't want to use here\n\nexport var IGNORE_ACTIONS = []; // TODO: Create constant types for model\n\nexport var Types = _objectSpread({}, makeConstantCreator('SIGN_IN', 'SIGN_IN_SUCCESS', 'SIGN_IN_FAILURE', 'SIGN_UP', 'SIGN_UP_SUCCESS', 'SIGN_UP_FAILURE', 'GOOGLE_SIGN_IN', 'GOOGLE_SIGN_IN_SUCCESS', 'GOOGLE_SIGN_IN_FAILURE', 'FB_SIGN_IN', 'FB_SIGN_IN_SUCCESS', 'FB_SIGN_IN_FAILURE', 'SIGN_OUT', 'CHANGE_PASSWORD', 'GET_USE', 'EDIT_USER', 'UPDATE_USER_SUCCESS', 'UPDATE_USER_FAILURE', 'SET_AUTH', 'SHOW_AUTH_DRAWER', 'GET_ACCOUNT_INFO', 'GET_ACCOUNT_INFO_SUCCESS', 'GET_ACCOUNT_INFO_FAILURE', 'UPDATE_ACCOUNT_INFO', 'UPDATE_ACCOUNT_INFO_SUCCESS', 'UPDATE_ACCOUNT_INFO_FAILURE')); // const CRUDActions = makeCRUDActionsCreator(MODEL, IGNORE_ACTIONS);\n// TODO: Custom actions\n\n/** Facebook Sign In */\n\nvar fbSignIn = function fbSignIn(accessToken, info) {\n  return makeActionCreator(Types.FB_SIGN_IN, {\n    accessToken: accessToken,\n    info: info\n  });\n};\n\nvar fbSignInSuccess = function fbSignInSuccess(token) {\n  return makeActionCreator(Types.FB_SIGN_IN_SUCCESS, {\n    token: token\n  });\n};\n\nvar fbSignInFailure = function fbSignInFailure(error) {\n  return makeActionCreator(Types.FB_SIGN_IN_FAILURE, {\n    error: error\n  });\n};\n/** Google Sign In */\n\n\nvar googleSignIn = function googleSignIn(accessToken) {\n  return makeActionCreator(Types.GOOGLE_SIGN_IN, {\n    accessToken: accessToken\n  });\n};\n\nvar googleSignInSuccess = function googleSignInSuccess(token) {\n  return makeActionCreator(Types.GOOGLE_SIGN_IN_SUCCESS, {\n    token: token\n  });\n};\n\nvar googleSignInFailure = function googleSignInFailure(error) {\n  return makeActionCreator(Types.GOOGLE_SIGN_IN_FAILURE, {\n    error: error\n  });\n};\n/** Email Sign In */\n\n\nvar signIn = function signIn(_ref) {\n  var email = _ref.email,\n      password = _ref.password;\n  return makeActionCreator(Types.SIGN_IN, {\n    email: email,\n    password: password\n  });\n};\n\nvar signInSuccess = function signInSuccess(token) {\n  return makeActionCreator(Types.SIGN_IN_SUCCESS, {\n    token: token\n  });\n};\n\nvar signInFailure = function signInFailure(error) {\n  return makeActionCreator(Types.SIGN_IN_FAILURE, {\n    error: error\n  });\n};\n/** Email Sign Up */\n\n\nvar signUp = function signUp(_ref2) {\n  var email = _ref2.email,\n      password = _ref2.password,\n      firstName = _ref2.firstName,\n      lastName = _ref2.lastName;\n  return makeActionCreator(Types.SIGN_UP, {\n    email: email,\n    password: password,\n    firstName: firstName,\n    lastName: lastName\n  });\n};\n\nvar signUpSuccess = function signUpSuccess(token) {\n  return makeActionCreator(Types.SIGN_UP_SUCCESS, {\n    token: token\n  });\n};\n\nvar signUpFailure = function signUpFailure(error) {\n  return makeActionCreator(Types.SIGN_UP_FAILURE, {\n    error: error\n  });\n};\n\nvar signOut = function signOut() {\n  return makeActionCreator(Types.SIGN_OUT);\n};\n/**\n * Set Authentication Status\n * @param {*} status\n */\n\n\nvar setAuth = function setAuth(status) {\n  return makeActionCreator(Types.SET_AUTH, {\n    status: status\n  });\n};\n/**\n * Show authentication drawer\n * @param {*} status\n */\n\n\nvar showAuthDrawer = function showAuthDrawer(status) {\n  return makeActionCreator(Types.SHOW_AUTH_DRAWER, {\n    status: status\n  });\n};\n/**\n * Get account info\n * @param {*} status\n */\n\n\nvar getAccountInfo = function getAccountInfo() {\n  return makeActionCreator(Types.GET_ACCOUNT_INFO);\n};\n\nvar getAccountInfoSuccess = function getAccountInfoSuccess(data) {\n  return makeActionCreator(Types.GET_ACCOUNT_INFO_SUCCESS, _objectSpread({}, data));\n};\n\nvar getAccountInfoFailure = function getAccountInfoFailure(error) {\n  return makeActionCreator(Types.GET_ACCOUNT_INFO_SUCCESS, _objectSpread({}, error));\n}; // TODO: Auto generated actions will be like this\n\n\nexport default {\n  fbSignIn: fbSignIn,\n  fbSignInSuccess: fbSignInSuccess,\n  fbSignInFailure: fbSignInFailure,\n  googleSignIn: googleSignIn,\n  googleSignInSuccess: googleSignInSuccess,\n  googleSignInFailure: googleSignInFailure,\n  signIn: signIn,\n  signInSuccess: signInSuccess,\n  signInFailure: signInFailure,\n  signUp: signUp,\n  signUpSuccess: signUpSuccess,\n  signUpFailure: signUpFailure,\n  setAuth: setAuth,\n  showAuthDrawer: showAuthDrawer,\n  signOut: signOut,\n  getAccountInfo: getAccountInfo,\n  getAccountInfoSuccess: getAccountInfoSuccess,\n  getAccountInfoFailure: getAccountInfoFailure\n};","map":null,"metadata":{},"sourceType":"module"}