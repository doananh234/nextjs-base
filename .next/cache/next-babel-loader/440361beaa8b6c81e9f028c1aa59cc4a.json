{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadDataSaga);\n\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { Types, loadDataSuccess, loadDataError } from './actions';\n\nfunction loadDataSaga() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function loadDataSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch(\"\".concat(process.env.API_URL, \"users\"));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context.sent;\n          _context.next = 9;\n          return put(loadDataSuccess(data));\n\n        case 9:\n          _context.next = 15;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 15;\n          return put(loadDataError(_context.t0));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 11]]);\n}\n\nexport default takeLatest(Types.LOAD_DATA, loadDataSaga);","map":{"version":3,"sources":["/Users/apple/Work/myproject/base/base-nextjs/redux/placeholder/sagas.js"],"names":["loadDataSaga","put","takeLatest","Types","loadDataSuccess","loadDataError","fetch","process","env","API_URL","res","json","data","LOAD_DATA"],"mappings":";;;;yBAGUA,Y;;AAHV,SAASC,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,SAASC,KAAT,EAAgBC,eAAhB,EAAiCC,aAAjC,QAAsD,WAAtD;;AAEA,SAAUL,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEgB,iBAAMM,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,OAAhB,WAAX;;AAFhB;AAEUC,UAAAA,GAFV;AAAA;AAGiB,iBAAMA,GAAG,CAACC,IAAJ,EAAN;;AAHjB;AAGUC,UAAAA,IAHV;AAAA;AAII,iBAAMX,GAAG,CAACG,eAAe,CAACQ,IAAD,CAAhB,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMI,iBAAMX,GAAG,CAACI,aAAa,aAAd,CAAT;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeH,UAAU,CAACC,KAAK,CAACU,SAAP,EAAkBb,YAAlB,CAAzB","sourcesContent":["import { put, takeLatest } from 'redux-saga/effects';\nimport { Types, loadDataSuccess, loadDataError } from './actions';\n\nfunction* loadDataSaga() {\n  try {\n    const res = yield fetch(`${process.env.API_URL}users`);\n    const data = yield res.json();\n    yield put(loadDataSuccess(data));\n  } catch (err) {\n    yield put(loadDataError(err));\n  }\n}\n\nexport default takeLatest(Types.LOAD_DATA, loadDataSaga);\n"]},"metadata":{},"sourceType":"module"}