{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport Immutable from 'seamless-immutable';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (process.env.NODE_ENV !== 'production') {\n    return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nfunction configureStore(initialState) {\n  var sagaMiddleware = createSagaMiddleware();\n  var store = createStore(rootReducer, Immutable(initialState), bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/apple/Work/myproject/base/base-nextjs/redux/store.js"],"names":["applyMiddleware","createStore","createSagaMiddleware","Immutable","rootReducer","rootSaga","bindMiddleware","middleware","process","env","NODE_ENV","configureStore","initialState","sagaMiddleware","store","sagaTask","run"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,OAAOC,QAAP,MAAqB,SAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,UAAU,EAAI;AACnC,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,WAAOV,eAAe,MAAf,4BAAmBO,UAAnB,EAAP;AACD;;AACD,SAAOP,eAAe,MAAf,4BAAmBO,UAAnB,EAAP;AACD,CALD;;AAOA,SAASI,cAAT,CAAwBC,YAAxB,EAAsC;AACpC,MAAMC,cAAc,GAAGX,oBAAoB,EAA3C;AACA,MAAMY,KAAK,GAAGb,WAAW,CACvBG,WADuB,EAEvBD,SAAS,CAACS,YAAD,CAFc,EAGvBN,cAAc,CAAC,CAACO,cAAD,CAAD,CAHS,CAAzB;AAMAC,EAAAA,KAAK,CAACC,QAAN,GAAiBF,cAAc,CAACG,GAAf,CAAmBX,QAAnB,CAAjB;AAEA,SAAOS,KAAP;AACD;;AAED,eAAeH,cAAf","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport Immutable from 'seamless-immutable';\nimport rootReducer from './reducers';\n\nimport rootSaga from './sagas';\n\nconst bindMiddleware = middleware => {\n  if (process.env.NODE_ENV !== 'production') {\n    return applyMiddleware(...middleware);\n  }\n  return applyMiddleware(...middleware);\n};\n\nfunction configureStore(initialState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    Immutable(initialState),\n    bindMiddleware([sagaMiddleware])\n  );\n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}