{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport Actions, { Types } from './actions';\nimport * as snsAPI from '../../api/SNS';\nimport * as userAPI from '../../api/user';\nimport { setToken } from '../../utils/cookies';\nimport { showError } from '../exceptions';\nexport function* fbSignIn(payload) {\n  try {\n    const response = yield call(snsAPI.fbSignIn, payload);\n    const {\n      token\n    } = response || {};\n\n    if (!token) {\n      throw response;\n    }\n\n    yield put(Actions.fbSignInSuccess(response));\n    yield put(Actions.showAuthDrawer(false)); // TODO: Set token in cookies\n\n    setToken(token);\n  } catch (err) {\n    yield put(Actions.fbSignInFailure(err));\n    showError(err);\n  }\n}\nexport function* googleSignIn(payload) {\n  try {\n    const response = yield call(snsAPI.googleSignIn, payload);\n    const {\n      token\n    } = response || {};\n\n    if (!token) {\n      throw response;\n    }\n\n    yield put(Actions.googleSignInSuccess(response));\n    yield put(Actions.showAuthDrawer(false)); // TODO: Set token in cookies\n\n    setToken(token);\n  } catch (err) {\n    yield put(Actions.googleSignInFailure(err));\n    showError(err);\n  }\n}\nexport function* signIn(payload) {\n  try {\n    const response = yield call(snsAPI.signIn, payload);\n    const {\n      token\n    } = response || {};\n\n    if (!token) {\n      throw response;\n    }\n\n    yield put(Actions.signInSuccess(response));\n    yield put(Actions.showAuthDrawer(false)); // // TODO: Set token in cookies\n\n    setToken(token);\n    yield put(Actions.getAccountInfo());\n  } catch (err) {\n    yield put(Actions.signInFailure(err));\n    showError(err);\n  }\n}\nexport function* signUp(payload) {\n  try {\n    const response = yield call(snsAPI.signUp, payload);\n    const {\n      token\n    } = response || {};\n\n    if (!token) {\n      throw response;\n    }\n\n    yield put(Actions.signUpSuccess(response));\n    yield put(Actions.showAuthDrawer(false)); // TODO: Set token in cookies\n\n    setToken(token);\n  } catch (err) {\n    yield put(Actions.signUpFailure(err));\n    showError(err);\n  }\n}\nexport function* getAccountInfo(payload) {\n  try {\n    const response = yield call(userAPI.getAccountInfo, payload); // TODO: Set token in cookies\n\n    if (!response) {\n      throw response;\n    }\n\n    yield put(Actions.getAccountInfoSuccess(response));\n  } catch (err) {\n    yield put(Actions.getAccountInfoFailure(err));\n    showError(err);\n  }\n} // export function* updateUser(payload) { }\n\nexport default [takeLatest(Types.FB_SIGN_IN, fbSignIn), takeLatest(Types.GOOGLE_SIGN_IN, googleSignIn), takeLatest(Types.SIGN_IN, signIn), takeLatest(Types.SIGN_UP, signUp), takeLatest(Types.GET_ACCOUNT_INFO, getAccountInfo)];","map":{"version":3,"sources":["/Users/apple/Work/myproject/base/base-nextjs/redux/Auth/sagas.js"],"names":["takeLatest","call","put","Actions","Types","snsAPI","userAPI","setToken","showError","fbSignIn","payload","response","token","fbSignInSuccess","showAuthDrawer","err","fbSignInFailure","googleSignIn","googleSignInSuccess","googleSignInFailure","signIn","signInSuccess","getAccountInfo","signInFailure","signUp","signUpSuccess","signUpFailure","getAccountInfoSuccess","getAccountInfoFailure","FB_SIGN_IN","GOOGLE_SIGN_IN","SIGN_IN","SIGN_UP","GET_ACCOUNT_INFO"],"mappings":"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","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\nimport Actions, { Types } from './actions';\nimport * as snsAPI from '../../api/SNS';\nimport * as userAPI from '../../api/user';\n\nimport { setToken } from '../../utils/cookies';\nimport { showError } from '../exceptions';\n\nexport function* fbSignIn(payload) {\n  try {\n    const response = yield call(snsAPI.fbSignIn, payload);\n    const { token } = response || {};\n\n    if (!token) {\n      throw response;\n    }\n\n    yield put(Actions.fbSignInSuccess(response));\n    yield put(Actions.showAuthDrawer(false));\n    // TODO: Set token in cookies\n    setToken(token);\n  } catch (err) {\n    yield put(Actions.fbSignInFailure(err));\n    showError(err);\n  }\n}\n\nexport function* googleSignIn(payload) {\n  try {\n    const response = yield call(snsAPI.googleSignIn, payload);\n    const { token } = response || {};\n\n    if (!token) {\n      throw response;\n    }\n\n    yield put(Actions.googleSignInSuccess(response));\n    yield put(Actions.showAuthDrawer(false));\n    // TODO: Set token in cookies\n    setToken(token);\n  } catch (err) {\n    yield put(Actions.googleSignInFailure(err));\n    showError(err);\n  }\n}\n\nexport function* signIn(payload) {\n  try {\n    const response = yield call(snsAPI.signIn, payload);\n    const { token } = response || {};\n\n    if (!token) {\n      throw response;\n    }\n    yield put(Actions.signInSuccess(response));\n    yield put(Actions.showAuthDrawer(false));\n    // // TODO: Set token in cookies\n    setToken(token);\n    yield put(Actions.getAccountInfo());\n  } catch (err) {\n    yield put(Actions.signInFailure(err));\n    showError(err);\n  }\n}\n\nexport function* signUp(payload) {\n  try {\n    const response = yield call(snsAPI.signUp, payload);\n    const { token } = response || {};\n    if (!token) {\n      throw response;\n    }\n    yield put(Actions.signUpSuccess(response));\n    yield put(Actions.showAuthDrawer(false));\n    // TODO: Set token in cookies\n    setToken(token);\n  } catch (err) {\n    yield put(Actions.signUpFailure(err));\n    showError(err);\n  }\n}\n\nexport function* getAccountInfo(payload) {\n  try {\n    const response = yield call(userAPI.getAccountInfo, payload);\n    // TODO: Set token in cookies\n    if (!response) {\n      throw response;\n    }\n    yield put(Actions.getAccountInfoSuccess(response));\n  } catch (err) {\n    yield put(Actions.getAccountInfoFailure(err));\n    showError(err);\n  }\n}\n\n// export function* updateUser(payload) { }\n\nexport default [\n  takeLatest(Types.FB_SIGN_IN, fbSignIn),\n  takeLatest(Types.GOOGLE_SIGN_IN, googleSignIn),\n  takeLatest(Types.SIGN_IN, signIn),\n  takeLatest(Types.SIGN_UP, signUp),\n  takeLatest(Types.GET_ACCOUNT_INFO, getAccountInfo),\n];\n"]},"metadata":{},"sourceType":"module"}