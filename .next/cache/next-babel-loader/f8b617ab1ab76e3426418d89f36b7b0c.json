{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/apple/Work/myproject/base/base-nextjs/pages/_app.js\";\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport { ThemeProvider } from 'styled-components';\nimport AuthActions from '../redux/Auth/actions';\nimport configureStore from '../redux/store';\nimport { isAuthenticated } from '../utils/cookies';\nimport theme from '../config/theme';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps({\n        ctx\n      });\n    } // TODO: Sharing isAuthenticated state all of application\n\n\n    const isAuth = isAuthenticated(ctx);\n    ctx.store.dispatch(AuthActions.setAuth(isAuth));\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withRedux(configureStore)(withReduxSaga(MyApp));","map":{"version":3,"sources":["/Users/apple/Work/myproject/base/base-nextjs/pages/_app.js"],"names":["App","Container","React","Provider","withRedux","withReduxSaga","ThemeProvider","AuthActions","configureStore","isAuthenticated","theme","MyApp","getInitialProps","Component","ctx","pageProps","isAuth","store","dispatch","setAuth","render","props"],"mappings":";;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,OAAOC,cAAP,MAA2B,gBAA3B;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAEA,MAAMC,KAAN,SAAoBX,GAApB,CAAwB;AACtB,eAAaY,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC7BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0B;AAAEE,QAAAA;AAAF,OAA1B,CAAlB;AACD,KAL8C,CAM/C;;;AACA,UAAME,MAAM,GAAGP,eAAe,CAACK,GAAD,CAA9B;AACAA,IAAAA,GAAG,CAACG,KAAJ,CAAUC,QAAV,CAAmBX,WAAW,CAACY,OAAZ,CAAoBH,MAApB,CAAnB;AAEA,WAAO;AAAED,MAAAA;AAAF,KAAP;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBE,MAAAA;AAAxB,QAAkC,KAAKI,KAA7C;AACA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAEX,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEO,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF,CADF;AASD;;AAzBqB;;AA4BxB,eAAeX,SAAS,CAACI,cAAD,CAAT,CAA0BH,aAAa,CAACM,KAAD,CAAvC,CAAf","sourcesContent":["import App, { Container } from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport { ThemeProvider } from 'styled-components';\nimport AuthActions from '../redux/Auth/actions';\n\nimport configureStore from '../redux/store';\nimport { isAuthenticated } from '../utils/cookies';\nimport theme from '../config/theme';\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps({ ctx });\n    }\n    // TODO: Sharing isAuthenticated state all of application\n    const isAuth = isAuthenticated(ctx);\n    ctx.store.dispatch(AuthActions.setAuth(isAuth));\n\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n      <Container>\n        <ThemeProvider theme={theme}>\n          <Provider store={store}>\n            <Component {...pageProps} />\n          </Provider>\n        </ThemeProvider>\n      </Container>\n    );\n  }\n}\n\nexport default withRedux(configureStore)(withReduxSaga(MyApp));\n"]},"metadata":{},"sourceType":"module"}