{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(apiWrapper);\n\nimport { call, put } from 'redux-saga/effects';\nimport _ from 'lodash'; // import LoginActions from '../Redux/LoginRedux/actions';\n\nexport function makeConstantCreator() {\n  var constant = {};\n\n  for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n    params[_key] = arguments[_key];\n  }\n\n  _.each(params, function (param) {\n    constant[param] = param;\n  });\n\n  return constant;\n}\nexport var makeActionCreator = function makeActionCreator(type) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return _objectSpread({\n    type: type\n  }, params);\n};\nexport var makeReducerCreator = function makeReducerCreator() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var handlers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    if (!action && !action.type) return state;\n    var handler = handlers[action.type];\n    return handler && handler(state, action) || state;\n  };\n};\nexport function apiWrapper() {\n  var isHaveProgress,\n      apiFunc,\n      _len2,\n      params,\n      _key2,\n      response,\n      _args = arguments;\n\n  return _regeneratorRuntime.wrap(function apiWrapper$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          isHaveProgress = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;\n          apiFunc = _args.length > 1 ? _args[1] : undefined;\n          _context.prev = 2;\n\n          for (_len2 = _args.length, params = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n            params[_key2 - 2] = _args[_key2];\n          }\n\n          _context.next = 6;\n          return call.apply(void 0, [apiFunc].concat(params));\n\n        case 6:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response);\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](2);\n          return _context.abrupt(\"return\", _context.t0);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[2, 10]]);\n}","map":null,"metadata":{},"sourceType":"module"}